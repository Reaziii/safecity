import React, { useEffect, useState } from "react";
import "./Modal.scss";
import crossshape from "../../Assets/Icon/sidebarIcons/crossshape.svg";
import searchIcon from "../../Assets/Icon/extra/search.svg";
import plus from "../../Assets/Icon/extra/plus.svg";
const leftarrow = (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M15 20L7 12L15 4"
      stroke="white"
      stroke-linecap="round"
      stroke-linejoin="round"
    />
  </svg>
);
const safecoin = (
  <svg
    width="21"
    height="27"
    viewBox="0 0 21 27"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <mask id="path-1-inside-1" fill="white">
      <path
        fill-rule="evenodd"
        clip-rule="evenodd"
        d="M9.97265 0.0225318C8.7557 0.177818 7.78017 0.905402 7.19643 2.09313C7.0488 2.39351 6.90338 2.78991 6.86828 2.98772C6.85615 3.05601 6.71383 8.97299 6.71656 9.29589C6.71705 9.35452 6.71259 9.3603 6.60001 9.44726C6.07698 9.85122 5.53512 10.3745 5.13165 10.8652C3.83423 12.4431 3.41992 14.2838 3.92129 16.2426C4.17221 17.2229 4.6638 18.2241 5.3295 19.1107L5.4791 19.3099L5.00799 19.7793L4.53689 20.2487L4.37247 20.0423C2.43606 17.6108 1.85072 15.0865 2.64785 12.6046C3.07713 11.2679 3.93748 9.91471 5.02242 8.86967L5.26558 8.63545V7.82814C5.26558 7.38413 5.25976 7.02083 5.25265 7.02083C5.24159 7.02083 0.0139948 9.77372 0.00121576 9.78628C-0.00701432 9.79436 0.0284049 10.5689 0.0513295 10.8825C0.275951 13.954 1.03388 16.9212 2.18439 19.2332C2.73811 20.3459 3.34885 21.2726 4.07533 22.1021C4.27221 22.3269 4.65202 22.7209 4.67189 22.7209C4.68151 22.7209 5.18557 22.2265 5.79199 21.6223L6.89457 20.5238L6.95171 20.5474C6.98315 20.5604 7.1163 20.6156 7.24762 20.6699C8.32718 21.1169 9.34848 21.4052 10.1267 21.4828C10.4749 21.5176 10.9126 21.496 11.3334 21.4235C12.0313 21.3031 12.9909 21.0025 13.8713 20.6284C13.9998 20.5738 14.1109 20.5291 14.1183 20.5291C14.1257 20.5291 14.6266 21.0223 15.2315 21.625C15.8363 22.2277 16.3387 22.7209 16.3478 22.7209C16.3647 22.7209 16.7016 22.3716 16.9087 22.1394C18.9161 19.8893 20.2931 16.4158 20.8273 12.2542C20.9291 11.4613 20.9943 10.6463 20.9977 10.1242L21 9.77594L18.3888 8.39841C16.9527 7.64075 15.7726 7.02086 15.7664 7.02085C15.7603 7.02083 15.7554 7.38818 15.7556 7.83715L15.756 8.65346L15.8694 8.75037C16.1191 8.96375 16.5731 9.45945 16.888 9.86256C18.1815 11.5185 18.8256 13.4114 18.7022 15.194C18.588 16.8445 17.917 18.4326 16.6638 20.0185C16.5649 20.1435 16.48 20.2458 16.475 20.2458C16.4699 20.2458 16.2558 20.0362 15.9991 19.7799L15.5323 19.314L15.6529 19.1574C15.975 18.7393 16.2745 18.2562 16.5262 17.7485C16.915 16.9643 17.1438 16.2374 17.2534 15.4377C17.2983 15.1101 17.3091 14.4233 17.2747 14.0881C17.1592 12.9621 16.7328 11.9425 15.9716 10.9719C15.5911 10.4867 14.9742 9.88009 14.4369 9.4627L14.3083 9.36279L14.2989 9.06032C14.2937 8.89394 14.2624 7.50987 14.2293 5.9846C14.1963 4.45932 14.1632 3.14696 14.1558 3.06824C14.1318 2.81313 13.9356 2.2886 13.7179 1.89722C13.1126 0.809234 12.1833 0.164891 11.0121 0.0212049C10.777 -0.00764564 10.2034 -0.0069151 9.97265 0.0225318ZM10.8927 1.94575C11.5557 2.05921 12.0577 2.50706 12.3489 3.24481L12.4033 3.38264V5.87003V8.35744L12.1512 8.31624C11.8275 8.26336 11.3576 8.20448 11.0341 8.1763C10.453 8.12565 9.83981 8.16428 8.89671 8.31095C8.76636 8.33123 8.65019 8.34781 8.63858 8.34781C8.62049 8.34781 8.61747 7.99204 8.61747 5.86125V3.37469L8.66242 3.2584C8.94751 2.52069 9.46623 2.05452 10.1248 1.94421C10.2958 1.91554 10.7212 1.91641 10.8927 1.94575ZM11.0865 10.0756C12.4956 10.2849 13.6823 11.0362 14.4574 12.2095C14.6167 12.4507 14.8597 12.934 14.9544 13.1983C15.0814 13.5525 15.1778 13.9792 15.2162 14.3565C15.2401 14.5905 15.2362 15.0962 15.2088 15.3355C15.0866 16.4029 14.6335 17.3613 13.8878 18.1302C13.4882 18.5421 13.073 18.8475 12.5754 19.0954C11.2207 19.7701 9.6504 19.7701 8.29575 19.0954C7.79482 18.8459 7.38049 18.5407 6.97751 18.1244C6.23504 17.3574 5.78551 16.4037 5.66184 15.3331C5.6336 15.0886 5.62956 14.604 5.65377 14.3639C5.80374 12.8767 6.6282 11.5518 7.89602 10.7605C8.55218 10.351 9.28077 10.1116 10.0839 10.0417C10.2687 10.0256 10.8919 10.0467 11.0865 10.0756ZM10.1138 11.5519V11.9828L10.0353 12.0011C9.61837 12.0978 9.25407 12.2898 9.01336 12.5396C8.86705 12.6915 8.81574 12.7645 8.72931 12.9434C8.61721 13.1755 8.59683 13.2752 8.59593 13.5961C8.59525 13.8394 8.59914 13.8856 8.62887 13.988C8.70149 14.2382 8.8073 14.4146 8.9977 14.603C9.26414 14.8667 9.61798 15.0551 10.2859 15.2889C10.5323 15.3752 10.8473 15.5285 10.9443 15.6095C11.2164 15.8365 11.2536 16.1572 11.0329 16.374C10.8939 16.5106 10.6883 16.5776 10.3735 16.589C9.92684 16.6051 9.44622 16.4998 8.99436 16.2868C8.89388 16.2394 8.80799 16.2043 8.8035 16.2088C8.79323 16.219 8.52435 17.2657 8.53057 17.2712C8.55383 17.2918 8.78755 17.3972 8.89979 17.4377C9.17289 17.5362 9.58754 17.6246 9.86694 17.644C9.94101 17.6491 10.0168 17.6564 10.0353 17.6602L10.069 17.667V18.0917V18.5163H10.5253H10.9817V18.0566V17.597L11.1052 17.5705C11.3719 17.5134 11.6454 17.4003 11.8692 17.2546C12.0229 17.1545 12.274 16.8961 12.3643 16.745C12.5206 16.4835 12.5863 16.2351 12.5861 15.9071C12.5859 15.4365 12.4491 15.0965 12.1447 14.8095C11.8955 14.5744 11.6001 14.4121 11.0491 14.2073C10.4337 13.9785 10.1148 13.7904 10.0232 13.6018C9.99556 13.5449 9.99147 13.516 9.99717 13.4181C10.0079 13.2336 10.0836 13.13 10.2724 13.0417C10.4307 12.9676 10.5496 12.9511 10.862 12.9597C11.2542 12.9706 11.545 13.0363 11.9287 13.2008C12.001 13.2318 12.0641 13.2532 12.069 13.2483C12.0778 13.2396 12.3235 12.3029 12.3317 12.2471C12.3394 12.1944 12.0028 12.0682 11.672 11.9998C11.5064 11.9656 11.1993 11.9262 11.0982 11.9262H11.0266V11.5236V11.121H10.5702H10.1138V11.5519ZM6.50009 23.0054C6.09682 23.3507 5.74705 23.6489 5.72286 23.668L5.67883 23.7027L5.75778 23.7734C6.02005 24.0084 6.65613 24.5182 7.14925 24.8886C8.15788 25.6464 9.18519 26.3243 10.1542 26.8716C10.327 26.9692 10.3949 27 10.4372 27C10.5006 27 10.6189 26.9371 11.1763 26.6069C12.3778 25.895 13.7652 24.9105 14.8574 23.9948C15.2052 23.7032 15.1976 23.7106 15.1716 23.6858C15.1468 23.6621 13.6969 22.4268 13.6575 22.3958C13.6367 22.3794 13.5838 22.3893 13.3211 22.4589C12.2839 22.7334 11.3186 22.8914 10.5927 22.9052C9.78645 22.9205 8.89404 22.7956 7.76453 22.5095C7.50528 22.4438 7.27971 22.3872 7.26325 22.3838C7.24098 22.3791 7.04575 22.5381 6.50009 23.0054Z"
      />
    </mask>
    <path
      fill-rule="evenodd"
      clip-rule="evenodd"
      d="M9.97265 0.0225318C8.7557 0.177818 7.78017 0.905402 7.19643 2.09313C7.0488 2.39351 6.90338 2.78991 6.86828 2.98772C6.85615 3.05601 6.71383 8.97299 6.71656 9.29589C6.71705 9.35452 6.71259 9.3603 6.60001 9.44726C6.07698 9.85122 5.53512 10.3745 5.13165 10.8652C3.83423 12.4431 3.41992 14.2838 3.92129 16.2426C4.17221 17.2229 4.6638 18.2241 5.3295 19.1107L5.4791 19.3099L5.00799 19.7793L4.53689 20.2487L4.37247 20.0423C2.43606 17.6108 1.85072 15.0865 2.64785 12.6046C3.07713 11.2679 3.93748 9.91471 5.02242 8.86967L5.26558 8.63545V7.82814C5.26558 7.38413 5.25976 7.02083 5.25265 7.02083C5.24159 7.02083 0.0139948 9.77372 0.00121576 9.78628C-0.00701432 9.79436 0.0284049 10.5689 0.0513295 10.8825C0.275951 13.954 1.03388 16.9212 2.18439 19.2332C2.73811 20.3459 3.34885 21.2726 4.07533 22.1021C4.27221 22.3269 4.65202 22.7209 4.67189 22.7209C4.68151 22.7209 5.18557 22.2265 5.79199 21.6223L6.89457 20.5238L6.95171 20.5474C6.98315 20.5604 7.1163 20.6156 7.24762 20.6699C8.32718 21.1169 9.34848 21.4052 10.1267 21.4828C10.4749 21.5176 10.9126 21.496 11.3334 21.4235C12.0313 21.3031 12.9909 21.0025 13.8713 20.6284C13.9998 20.5738 14.1109 20.5291 14.1183 20.5291C14.1257 20.5291 14.6266 21.0223 15.2315 21.625C15.8363 22.2277 16.3387 22.7209 16.3478 22.7209C16.3647 22.7209 16.7016 22.3716 16.9087 22.1394C18.9161 19.8893 20.2931 16.4158 20.8273 12.2542C20.9291 11.4613 20.9943 10.6463 20.9977 10.1242L21 9.77594L18.3888 8.39841C16.9527 7.64075 15.7726 7.02086 15.7664 7.02085C15.7603 7.02083 15.7554 7.38818 15.7556 7.83715L15.756 8.65346L15.8694 8.75037C16.1191 8.96375 16.5731 9.45945 16.888 9.86256C18.1815 11.5185 18.8256 13.4114 18.7022 15.194C18.588 16.8445 17.917 18.4326 16.6638 20.0185C16.5649 20.1435 16.48 20.2458 16.475 20.2458C16.4699 20.2458 16.2558 20.0362 15.9991 19.7799L15.5323 19.314L15.6529 19.1574C15.975 18.7393 16.2745 18.2562 16.5262 17.7485C16.915 16.9643 17.1438 16.2374 17.2534 15.4377C17.2983 15.1101 17.3091 14.4233 17.2747 14.0881C17.1592 12.9621 16.7328 11.9425 15.9716 10.9719C15.5911 10.4867 14.9742 9.88009 14.4369 9.4627L14.3083 9.36279L14.2989 9.06032C14.2937 8.89394 14.2624 7.50987 14.2293 5.9846C14.1963 4.45932 14.1632 3.14696 14.1558 3.06824C14.1318 2.81313 13.9356 2.2886 13.7179 1.89722C13.1126 0.809234 12.1833 0.164891 11.0121 0.0212049C10.777 -0.00764564 10.2034 -0.0069151 9.97265 0.0225318ZM10.8927 1.94575C11.5557 2.05921 12.0577 2.50706 12.3489 3.24481L12.4033 3.38264V5.87003V8.35744L12.1512 8.31624C11.8275 8.26336 11.3576 8.20448 11.0341 8.1763C10.453 8.12565 9.83981 8.16428 8.89671 8.31095C8.76636 8.33123 8.65019 8.34781 8.63858 8.34781C8.62049 8.34781 8.61747 7.99204 8.61747 5.86125V3.37469L8.66242 3.2584C8.94751 2.52069 9.46623 2.05452 10.1248 1.94421C10.2958 1.91554 10.7212 1.91641 10.8927 1.94575ZM11.0865 10.0756C12.4956 10.2849 13.6823 11.0362 14.4574 12.2095C14.6167 12.4507 14.8597 12.934 14.9544 13.1983C15.0814 13.5525 15.1778 13.9792 15.2162 14.3565C15.2401 14.5905 15.2362 15.0962 15.2088 15.3355C15.0866 16.4029 14.6335 17.3613 13.8878 18.1302C13.4882 18.5421 13.073 18.8475 12.5754 19.0954C11.2207 19.7701 9.6504 19.7701 8.29575 19.0954C7.79482 18.8459 7.38049 18.5407 6.97751 18.1244C6.23504 17.3574 5.78551 16.4037 5.66184 15.3331C5.6336 15.0886 5.62956 14.604 5.65377 14.3639C5.80374 12.8767 6.6282 11.5518 7.89602 10.7605C8.55218 10.351 9.28077 10.1116 10.0839 10.0417C10.2687 10.0256 10.8919 10.0467 11.0865 10.0756ZM10.1138 11.5519V11.9828L10.0353 12.0011C9.61837 12.0978 9.25407 12.2898 9.01336 12.5396C8.86705 12.6915 8.81574 12.7645 8.72931 12.9434C8.61721 13.1755 8.59683 13.2752 8.59593 13.5961C8.59525 13.8394 8.59914 13.8856 8.62887 13.988C8.70149 14.2382 8.8073 14.4146 8.9977 14.603C9.26414 14.8667 9.61798 15.0551 10.2859 15.2889C10.5323 15.3752 10.8473 15.5285 10.9443 15.6095C11.2164 15.8365 11.2536 16.1572 11.0329 16.374C10.8939 16.5106 10.6883 16.5776 10.3735 16.589C9.92684 16.6051 9.44622 16.4998 8.99436 16.2868C8.89388 16.2394 8.80799 16.2043 8.8035 16.2088C8.79323 16.219 8.52435 17.2657 8.53057 17.2712C8.55383 17.2918 8.78755 17.3972 8.89979 17.4377C9.17289 17.5362 9.58754 17.6246 9.86694 17.644C9.94101 17.6491 10.0168 17.6564 10.0353 17.6602L10.069 17.667V18.0917V18.5163H10.5253H10.9817V18.0566V17.597L11.1052 17.5705C11.3719 17.5134 11.6454 17.4003 11.8692 17.2546C12.0229 17.1545 12.274 16.8961 12.3643 16.745C12.5206 16.4835 12.5863 16.2351 12.5861 15.9071C12.5859 15.4365 12.4491 15.0965 12.1447 14.8095C11.8955 14.5744 11.6001 14.4121 11.0491 14.2073C10.4337 13.9785 10.1148 13.7904 10.0232 13.6018C9.99556 13.5449 9.99147 13.516 9.99717 13.4181C10.0079 13.2336 10.0836 13.13 10.2724 13.0417C10.4307 12.9676 10.5496 12.9511 10.862 12.9597C11.2542 12.9706 11.545 13.0363 11.9287 13.2008C12.001 13.2318 12.0641 13.2532 12.069 13.2483C12.0778 13.2396 12.3235 12.3029 12.3317 12.2471C12.3394 12.1944 12.0028 12.0682 11.672 11.9998C11.5064 11.9656 11.1993 11.9262 11.0982 11.9262H11.0266V11.5236V11.121H10.5702H10.1138V11.5519ZM6.50009 23.0054C6.09682 23.3507 5.74705 23.6489 5.72286 23.668L5.67883 23.7027L5.75778 23.7734C6.02005 24.0084 6.65613 24.5182 7.14925 24.8886C8.15788 25.6464 9.18519 26.3243 10.1542 26.8716C10.327 26.9692 10.3949 27 10.4372 27C10.5006 27 10.6189 26.9371 11.1763 26.6069C12.3778 25.895 13.7652 24.9105 14.8574 23.9948C15.2052 23.7032 15.1976 23.7106 15.1716 23.6858C15.1468 23.6621 13.6969 22.4268 13.6575 22.3958C13.6367 22.3794 13.5838 22.3893 13.3211 22.4589C12.2839 22.7334 11.3186 22.8914 10.5927 22.9052C9.78645 22.9205 8.89404 22.7956 7.76453 22.5095C7.50528 22.4438 7.27971 22.3872 7.26325 22.3838C7.24098 22.3791 7.04575 22.5381 6.50009 23.0054Z"
      fill="black"
      stroke="url(#paint0_linear)"
      stroke-width="8"
      mask="url(#path-1-inside-1)"
    />
    <defs>
      <linearGradient
        id="paint0_linear"
        x1="10.5"
        y1="0"
        x2="10.5"
        y2="27"
        gradientUnits="userSpaceOnUse"
      >
        <stop stop-color="#9737FF" />
        <stop offset="1" stop-color="#127FFF" />
      </linearGradient>
    </defs>
  </svg>
);

const Modal = ({ header, children, open, onOpen, options }) => {
  const [opened, seopend] = useState(true);
  const [page, setpage] = useState(2);
  useEffect(() => {
    console.log(open);
    if (!open) {
      setTimeout(seopend(false), 800);
    }
  }, [open]);

  return (
    <div className={`Modal ${open ? "active" : "deactive"}`}>
      <div className={`modal-box ${page === 1 ? "page1x" : ""}`}>
        <Page1 setpage={setpage} options={options} header={header} open={open} onOpen={onOpen} />
        <Page2 setpage={setpage} options={options} header={header} open={open} onOpen={onOpen} />
      </div>
    </div>
  );
};

const Page1 = ({ header, options, onOpen,setpage }) => {
  return (
    <div className="page1">
      <div className="head">
        <h1>{header}</h1>
        <button className="crossbutton" onClick={() => onOpen(false)}>
          <img src={crossshape} alt="" />
        </button>
      </div>
      <div className="search-div">
        <img src={searchIcon} alt="search item" />
        <input placeholder="Search" type="text" className="search" />
      </div>
      <div style={{ height: "20px" }} />
      <div className="children">
        <div className="add-new-currency">
          {options.map((item, key) => (
            <div className="currencys">
              <div className="left">
                <img src={item.icon} alt="" />
                <div className="second">
                  <h1>{item.name}</h1>
                  <h2>{item.sname}</h2>
                </div>
              </div>
              <button onClick={()=>setpage(1)} className="right">
                <img src={plus} alt="" />
              </button>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

const Page2 = ({ header, options, onOpen,setpage }) => {
  return (
    <div className="page2">
      <div className="head">
        <button onClick={()=>setpage(2)} className="back-button">
          {leftarrow}
          BACK
        </button>
        <button className="crossbutton" onClick={() => onOpen(false)}>
          <img src={crossshape} alt="" />
        </button>
      </div>
      <div className="abxxt">
        <div className="coin-logo-header">
          <div className="logo">{safecoin}</div>
          <h1>SAFECOIN (SAFECOIN)</h1>
        </div>

        <div className="value20">20</div>

        <div className="total-value">
          <h1>$179.33</h1>
          <p>Total value</p>
        </div>

        <div onClick={()=>onOpen(false)} className="add-button">Add SFC to Portfolio</div>
      </div>
    </div>
  );
};

export default Modal;
